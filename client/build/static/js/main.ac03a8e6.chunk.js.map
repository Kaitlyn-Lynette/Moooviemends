{"version":3,"sources":["components/NavBar.js","components/Header.js","components/Logo.js","pages/Landing.js","components/Buttons.js","components/AlertSign.js","components/AlertBar.js","utils/API.js","pages/Create.js","components/SearchBar.js","components/MovieCard.js","components/MovieTitle.js","components/PlaylistButtons.js","pages/Search.js","pages/Playlist.js","pages/Movies.js","App.js","serviceWorker.js","index.js","assets/logo.png"],"names":["useStyles","makeStyles","root","width","position","bottom","background","styles","button","padding","icon","color","BottomNav","classes","BottomNavigation","className","BottomNavigationAction","component","Link","to","style","title","fontSize","fontFamily","Header","props","Typography","variant","logoStyle","height","top","left","Logo","src","logo","alt","Landing","Grid","container","justify","alignItems","direction","item","slogan","fontStyle","fontWeight","lineHeight","textAlign","backgroundColor","flewgrow","Buttons","Button","theme","marginTop","spacing","AlertSign","Alert","severity","AlertBar","message","type","openState","onClose","Snackbar","open","autoHideDuration","query","axios","get","movieData","post","playlistData","Create","useState","name","description","movies","playlist","setPlaylist","alertOpen","setAlertOpen","handleInputChange","e","target","value","console","log","titleStyle","Input","titleBoxStyle","onChange","placeholder","descStyle","descBoxStyle","id","multiline","rows","btnStyle","onClick","preventDefault","API","then","res","catch","err","btnFontStyle","event","reason","border","boxSizing","boxShadow","borderRadius","inputStyle","right","marginLeft","flex","justifyContent","SearchBar","InputBase","handleFormSubmit","mediaStyle","paddingTop","cardStyle","margin","contentStyle","MovieCard","useTheme","Card","CardMedia","image","CardContent","director","genre","released","MovieTitle","maxWidth","playlistButton","PlaylistButtons","playlists","useEffect","data","List","map","ListItem","key","_id","ListItemText","searchStyle","resultsStyle","headerStyle","Search","search","setSearch","movie","setMovie","result","Title","Director","Genre","poster","Poster","Released","palette","paper","ListItemLink","Playlist","playlistCreated","setPlaylistCreated","aria-label","href","Movies","moviesSaved","setMoviesSaved","xs","sm","App","exact","path","NavBar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.ac03a8e6.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100vw',\n    position: 'fixed',\n    bottom: 0,\n    background: 'rgba(255, 216, 99)',\n  },\n});\n\nconst BottomNav = () => {\n  const classes = useStyles();\n\n  return (\n    <BottomNavigation className={classes.root}>\n      <BottomNavigationAction\n        component={Link}\n        to='/'\n        icon={<HomeIcon style={styles.icon} />}\n        style={styles.button}\n      />\n      <BottomNavigationAction\n        component={Link}\n        to='/search'\n        icon={<SearchIcon style={styles.icon} />}\n        style={styles.button}\n      />\n      <BottomNavigationAction\n        component={Link}\n        to='/create'\n        icon={<AddCircleOutlineIcon style={styles.icon} />}\n        style={styles.button}\n      />\n    </BottomNavigation>\n  );\n};\n\nconst styles = {\n  button: {\n    padding: 0,\n  },\n  icon: {\n    color: 'black',\n  },\n};\n\nexport default BottomNav;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles (() => ({\n    title: {\n        color: '#FFFFFF',\n        position: 'relative',\n        fontSize: '3em',\n        fontFamily: 'Luckiest Guy',\n        bottom:'250px'\n    }\n}));\n\nconst Header = (props) => {\n    const classes = useStyles();\n    return (\n        <Typography variant='h1' className={classes.title} {...props}>Moooviemends</Typography>\n    )\n}\n\n\nexport default Header;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport logo from '../assets/logo.png';\n\nconst useStyles = makeStyles (() => ({\n    logoStyle: {\n        height: '50%',\n        width: '100%',\n        position: 'fixed',\n        top: '20px',\n        left: '0px'\n    }\n}));\n\nconst Logo = () => {\n    const classes = useStyles ();\n    return (\n        <img className={classes.logoStyle} src={logo} alt='logo' />\n    )\n}\n\nexport default Logo;","import React from 'react';\nimport Header from '../components/Header';\nimport Logo from '../components/Logo';\nimport {Grid, Typography } from '@material-ui/core';\n\nexport default function Landing () {\n\n    return (\n        <Grid \n        container\n        style={container}\n        justify='center'\n        alignItems='center'\n        direction='column'\n        >\n            <Grid item>\n                <Logo></Logo>\n            </Grid>\n            <Grid item>\n                <Header></Header>\n            </Grid>\n            <Grid item>\n                <Typography style={slogan}>Make your moooviemends to your friends</Typography>\n            </Grid>\n        </Grid>)\n}\n\nconst slogan = {\n    position: 'absolute',\n    width: '80.9%',\n    height: '9%',\n    left: '10%',\n    fontFamily: 'Crafty Girls',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '36px',\n    color: '#FFFFFF',\n    lineHeight: '52px',\n    textAlign: 'center',\n}\n\nconst container = {\n    backgroundColor: '#FF5200',\n    width: '100vw',\n    height: '100vh',\n    flewgrow: '1',\n  };","import React from 'react';\nimport {Button} from '@material-ui/core';\n\nexport default function Buttons (props) {\n    return (\n    // <Button onClick={props.handleCreateMovie}{...props} />\n    <Button {...props} />\n    )\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AlertSign() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Alert icon={false} severity=\"success\">\n        This is a success alert — check it out!\n      </Alert>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport AlertSign from './AlertSign';\n\nconst AlertBar = ({ message, type, openState, onClose }) => {\n  return (\n    <Snackbar\n      open={openState}\n      autoHideDuration={2000}\n      onClose={() => {\n        onClose();\n      }}\n      style={{ bottom: 90 }}\n    >\n      <AlertSign\n        onClose={() => {\n          onClose();\n        }}\n        severity={type}\n      >\n        {message}\n      </AlertSign>\n    </Snackbar>\n  );\n};\n\nexport default AlertBar;\n","import axios from \"axios\";\nconst BASEURL = \"https://www.omdbapi.com/?t=\";\nconst APIKEY = \"&apikey=trilogy\";\n\nexport default {\n  //Movie Routes\n  search: function(query) {\n    return axios.get(BASEURL + query + APIKEY);\n  },\n  //Add a new movie to the playlist\n  saveMovie: function (movieData) {\n    return axios.post('/api/movies',movieData);\n  },\n  getMovies: function (movieData) {\n    return axios.get('api/movies',movieData);\n  },\n  //Playlist Routes\n  //Get the playlist from database. Using this on Playlist.js line 35. \n  getPlaylist: function () {\n    return axios.get('api/playlists');\n  },\n  //Create playlist without movies. Using this on Create.js Line 15. \n  createPlaylist: function (playlistData) {\n    return axios.post('api/playlists', playlistData);\n  },\n  //Update playlist with a saved movie\n  // updatePlaylist: function (id, newMovieData) {\n  //   return axios.put(`api/playlists/${id}`, newMovieData);\n  // }\n};","import React, {useState} from 'react';\nimport Header from '../components/Header';\nimport Buttons from '../components/Buttons';\nimport Logo from '../components/Logo';\nimport AlertBar from '../components/AlertBar';\nimport {Grid, Typography, Input} from '@material-ui/core';\nimport API from \"../utils/API\";\n\nexport default function Create () {\n  \n    const [playlist, setPlaylist] = useState({name: \"\", description:\"\", movies: []});\n    const [alertOpen, setAlertOpen] = useState(false);\n\n    const handleCreatePlaylist = e => {\n        e.preventDefault();\n        API.createPlaylist(playlist)\n            .then((res)=> {\n                setAlertOpen(true);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n        console.log('this is the playlist object', playlist)\n        };\n\n        const handleInputChange = e => {\n            const { name, value } = e.target;\n            setPlaylist(({\n                ...playlist,\n                [name]: value\n            }));\n            console.log('this is the value', value);\n        };\n\n        const handleCloseAlert = (event, reason) => {\n            if (reason === 'clickaway') {\n              return;\n            }\n            // close all\n            setAlertOpen(false);\n          };\n  \n    return (\n        <Grid \n        container\n        style={container}\n        justify='center'\n        alignItems='center'\n        direction='column'\n        >\n        <Grid item>\n            <Logo></Logo>\n        </Grid>\n        <Grid item>\n            <Header></Header>\n        </Grid>\n        <Grid item>\n            <Typography style={titleStyle}>Playlist Title</Typography>\n            <Input \n            value={playlist.name}\n            style={titleBoxStyle}\n            name=\"name\"\n            onChange = {handleInputChange}\n            type=\"text\"\n            placeholder=\"Cartoon movies\"\n            />\n        </Grid>\n        <Grid item>\n            <Typography style={descStyle}>Description</Typography> \n            <Input \n            value={playlist.description}\n            style={descBoxStyle}\n            name=\"description\"\n            onChange={handleInputChange}\n            type=\"text\"\n            placeholder=\"Love me some good cartoon movies\"\n            id=\"outlined-multiline-static\"\n            multiline\n            rows={4}\n            variant=\"filled\"\n            />\n        </Grid>\n        <Grid item>\n            <Buttons \n            style={btnStyle} \n            onClick={handleCreatePlaylist}\n            >\n            <Typography style={btnFontStyle}>Create</Typography>\n            </Buttons>\n            <AlertBar\n            message='Created~'\n            type='success'\n            openState={alertOpen}\n            onClose={handleCloseAlert}\n            />\n        </Grid> \n        </Grid>\n    )\n}\n\n\nconst titleStyle = {\n    fontFamily: 'Luckiest Guy',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '24px',\n    lineHeight: '24px',\n    color: '#000000',\n    position: 'absolute',\n    width: '74.7%',\n    height: '3.5%',\n    left: '5%',\n    top: '30%'\n}\n\nconst titleBoxStyle = {\n    position: 'absolute',\n    width: '85%',\n    height: '5.4%',\n    left: '5%',\n    top: '35%',\n    background: '#EEEEEE',\n    border: '1px solid #000000',\n    boxSizing: 'border-box',\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n}\n\nconst descStyle = {\n    fontFamily: 'Luckiest Guy',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '24px',\n    lineHeight: '24px',\n    color: '\t#000000',\n    position: 'absolute',\n    width: '34.8%',\n    height: '9.3%',\n    left: '5%',\n    top: '45%'\n}\n\nconst descBoxStyle = {\n    position: 'absolute',\n    width: '85%',\n    height: '15.1%',\n    left: '5%',\n    top: '50%',\n    background: '#EEEEEE',\n    border: '1px solid #000000',\n    boxSizing: 'border-box',\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n}\n\nconst btnStyle = {\n    position: 'absolute',\n    width: '32.3%',\n    height: '4.7%',\n    left: '5%',\n    top: '69%',\n    background: '#BA0FF7',\n    borderRadius: '18px',\n}\n\nconst btnFontStyle = {\n    fontFamily: 'Luckiest Guy',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '24px',\n    lineHeight: '24px'\n}\n\nconst container = {\n    backgroundColor: '#FF5200',\n    width: '100vw',\n    height: '100vh',\n    flewgrow: '1',\n  };\n\n\n\n","import React, {Component} from 'react'\nimport { InputBase, Button, Grid} from '@material-ui/core';\n\n\nconst SearchBar = (props) => {\n    return (\n        <Grid>\n            <InputBase\n            onChange={props.handleInputChange}\n            value={props.value}\n            name=\"search\"\n            type=\"text\"\n            placeholder=\"Search for a Movie\"\n            style={inputStyle}\n            id=\"search\"\n            />\n            <br />\n            <Button style={btnStyle} onClick={props.handleFormSubmit} {...props}> Search </Button>\n        </Grid>\n    )\n}\n\nconst inputStyle = {\n    position: 'absolute',\n    width: '85%',\n    height: '6.8%',\n    left: '8.2%',\n    right: '6.3%',\n    top: '30%',\n    background: '#EEEEEE',\n    border: '1px solid #000000',\n    boxSizing: 'borderBox',\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)',\n    marginLeft: 'theme.spacing(1)',\n    flex: 1,\n    justifyContent: 'center',\n};\n\nconst btnStyle = {\n    position: 'absolute',\n    width: '44.1%',\n    height: '5.4%',\n    left: '8.2%',\n    right: '47.1%',\n    top: '39.8%',\n    bottom: '15.9%',\n    background: '#BA0FF7',\n    borderRadius: '18px',\n    fontFamily: 'Luckiest Guy',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '24px',\n    lineHeight: '24px'\n}\n\nexport default SearchBar;","import React from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport {useTheme} from '@material-ui/core/styles';\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles ((theme) => ({\n    mediaStyle: {\n        paddingTop: '150%',\n    }\n}))\n\n\nfunction MovieCard (props) {\n    const classes = useStyles ();\n    const theme = useTheme ();\n    \n    return (\n    <Card \n    style={cardStyle}>\n        <CardMedia\n            className={classes.mediaStyle}\n            image={props.src}\n        />\n        <CardContent style={contentStyle}>\n        <h4>Director: {props.director}</h4>\n        <h4>Genre: {props.genre}</h4>\n        <h4>Released: {props.released}</h4>\n        </CardContent>\n    </Card>\n    )\n}\n\nconst cardStyle = {\n    position: 'absolute',\n    left: '7%',\n    // right: '30%',\n    top: '55%',\n    margin: '0px auto',\n    backgroundColor: \"#FFFF00\",\n    fontFamily: \"Roboto\",\n    width: \"50%\",\n}\n\n// const mediaStyle = {\n//     paddingTop: '150%',\n//     height: \"250\"\n// }\n\nconst contentStyle = {\n    // width: '50%',\n    height: '100%',\n    // margin: '30px'\n}\n\n\nexport default MovieCard;\n\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\n\nconst useStyles = makeStyles (() => ({\n    title: {\n        fontFamily: 'Luckiest Guy',\n        position: 'absolute',\n        width: '38.7%',\n        height: '6.6%',\n        left: '7%',\n        top: '50%',\n        textAlign: 'center'\n    }\n}));\n\nconst MovieTitle = (props) => {\n    const classes = useStyles();\n    return (\n        <Typography variant='h4' className={classes.title} {...props}></Typography>\n    )\n}\n\n\nexport default MovieTitle;","import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport API from \"../utils/API\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      position: 'absolute',\n      left: '100%', \n      top: '47%'\n\n    },\n    playlistButton: {\n        background: '#BA0FF7',\n        borderRadius: '12px',\n        fontFamily: 'Luckiest Guy',\n        fontStyle: 'bold',\n        fontSize: '24px',\n        lineHeight: '24px',\n        width: '150px',\n        height: '40px',\n        borderRadius: '17px',\n        backgroundColor: '#0000FF',\n        top: '55%',\n        right: '43%',\n        margin: '10px',\n    }\n  }));\n\nexport default function PlaylistButtons (props) {\n    //Setting the component's initial state \n    const [playlists, setPlaylist] = useState([]);\n    const classes = useStyles ();\n\n    //Load all the playlist and store them with setPlaylist\n    useEffect(() => {\n        loadPlaylist()\n    }, [])\n\n    //This will fetch the API for playlist saved in the database \n    function loadPlaylist () {\n        API.getPlaylist()\n        .then(res => \n            setPlaylist(res.data)\n        )\n        .catch(err => console.log(err));\n    };\n\n    return (\n        <List component=\"nav\" className={classes.root}>\n           \n            {playlists.map(playlist => {\n            return (\n                <ListItem \n                key={playlist._id}\n                // button={playlist._id}\n                className={classes.playlistButton}\n                {...props}\n                >\n                <ListItemText> {playlist.name} </ListItemText>\n                </ListItem>                \n            );\n            })}    \n        </List>\n    )\n}","import React, { useState } from 'react';\nimport Header from '../components/Header';\nimport SearchBar from '../components/SearchBar';\nimport MovieCard from '../components/MovieCard';\nimport MovieTitle from '../components/MovieTitle';\nimport PlaylistButtons from '../components/PlaylistButtons';\nimport API from \"../utils/API\";\nimport Logo from '../components/Logo';\nimport {Grid, Typography} from '@material-ui/core';\n\nconst Search = () => {\n    const [search, setSearch] = useState('');\n    const [movie, setMovie] = useState({});\n\n    const searchMovies = query => {\n        console.log(query)\n        API.search(query)\n            .then((res) => { \n                console.log(res.data)\n                setMovie({\n                    title: res.data.Title, \n                    director: res.data.Director,\n                    genre: res.data.Genre,\n                    poster: res.data.Poster,\n                    released: res.data.Released\n                 })\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    // When the form is submitted, search the OMDB API for the movie\n   const handleInputChange = event => {\n        const {value} = event.target; \n        setSearch(value)\n        console.log('this is the value', value);\n    };\n\n    const handleFormSubmit = event => {\n        event.preventDefault();\n        //Calls searchMovies\n        searchMovies(search);\n        \n    };\n\n    const handleSaveMovie = (event) => {\n        event.preventDefault();\n        API.saveMovie({...movie})\n            .then((res)=> {\n            console.log(res) \n            console.log(\"I saved the movie!\")\n            })\n            .catch((err) => {\n\n                console.log(err);\n            });\n    }\n\n\n        return (\n            <Grid \n            container\n            style={container}\n            justify='center'\n            alignItems='center'\n            direction='column'\n            >\n            <Grid item item xs={6} lg={10}> \n                <Logo></Logo>\n            </Grid>\n            <Grid item item xs={6} lg={10}>\n                <Header style={headerStyle}></Header>\n            </Grid>\n            <Grid item item xs={6} lg={10}>\n                <Typography style={searchStyle}>Search YO' MOOOVIE</Typography>\n                <SearchBar\n                value={search.result}\n                handleInputChange={handleInputChange}\n                handleFormSubmit={handleFormSubmit}\n                >\n                </SearchBar>\n            </Grid>\n            <Grid item item xs={6} lg={10}>\n            {movie.title ? (\n            <Grid container\n            style={container}\n            justify='center'\n            alignItems='center'\n            direction='row'\n            >\n            <Grid item item xs={6} lg={10}>\n                <MovieTitle>\n                    {movie.title || \"Search for a movie to begin\"}\n                </MovieTitle>\n                <MovieCard\n                src={movie.poster}\n                director={movie.director}\n                genre={movie.genre}\n                released={movie.released}\n                />\n            </Grid>\n            <Grid item item xs={6} lg={10}>\n                <PlaylistButtons\n                onClick={handleSaveMovie}\n                ></PlaylistButtons>  \n            </Grid>\n\n            </Grid>\n            ) : (\n                <Typography style={resultsStyle}>No Results to Display</Typography>\n            )}   \n            </Grid>\n            </Grid>\n        )\n    }\n\n\nconst searchStyle = {\n    fontFamily: 'Luckiest Guy',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '24px',\n    lineHeight: '24px',\n    color: '#FFFFFF',\n    textAlign: 'center',\n    position: 'absolute',\n    width: '71.9%',\n    height: '3.5%',\n    left: '6%',\n    top: '25%',\n}\n\nconst resultsStyle = {\n    fontFamily: 'Luckiest Guy',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '24px',\n    lineHeight: '24px',\n    color: '#FFFFFF',\n}\n\nconst headerStyle = {\n    color: '#FFFFFF',\n    bottom: '250px',\n    position: 'absolute',\n    fontSize: '3em',\n    fontFamily: 'Luckiest Guy',\n    width: '71.9%',\n    height: '3.5%',\n    left: '7%',\n    top: '13%',\n}\n\nconst container = {\n    backgroundColor: '#FF5200',\n    width: '200vw',\n    height: '200vh',\n    flewgrow: '1',\n  };\n\n\n\nexport default Search;","import React, {useState, useEffect} from 'react';\nimport Header from '../components/Header';\nimport Logo from '../components/Logo';\nimport {Grid, Typography, Button } from '@material-ui/core';\nimport API from '../utils/API';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n\nfunction ListItemLink(props) {\nreturn <ListItem button component=\"a\" {...props} />;\n}\n\nexport default function Playlist () {\n    const [playlistCreated, setPlaylistCreated] = useState([])\n    const classes = useStyles ();\n    \n      //Load all the playlist and store them with setPlaylist\n      useEffect(() => {\n        loadPlaylist()\n    }, [])\n\n    //This will fetch the API for playlist saved in the database \n    function loadPlaylist () {\n        API.getPlaylist()\n        .then(res => \n            setPlaylistCreated(res.data)\n        )\n        .catch(err => console.log(err));\n    };\n\n    return (\n\n        <Grid \n        container\n        style={container}\n        justify='center'\n        alignItems='center'\n        direction='column'\n        >\n        <Grid item>\n            <Logo></Logo>\n        </Grid>\n        <Grid item>\n            <Header></Header>\n        </Grid>\n        <Grid item>\n        <List component=\"nav\" aria-label=\"all-playlist\">\n            {playlistCreated.map(playlist=> {\n            return (\n                <ListItem \n                button={playlist._id}>\n                <ListItemLink href={\"/playlists/\" + playlist._id}>\n                <ListItemText>{playlist.title}</ListItemText>\n                <ListItemText>{playlist.description}</ListItemText>\n                </ListItemLink>\n                </ListItem>\n            );\n            })}\n        </List>\n        </Grid>\n        </Grid>\n    )\n}\n\nconst container = {\n    backgroundColor: '#FF5200',\n    width: '100vw',\n    height: '100vh',\n    flewgrow: '1',\n    // height: '100%',\n  };\n\n\nconst titleStyle = {\n    fontFamily: 'Luckiest Guy',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '24px',\n    lineHeight: '24px',\n    color: '#000000',\n    position: 'absolute',\n    width: '65.7%',\n    height: '4.7%',\n    top: '145px',\n    left: '7%',\n    right: '25%',\n}\n\nconst descStyle = {\n    fontFamily: 'Luckiest Guy',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '18px',\n    lineHeight: '24px',\n    color: '#000000',\n    position: 'absolute',\n    width: '248px',\n    height: '31px',\n    top: '200px',\n    left: '7%',\n    right: '25%',\n}\n\nconst tableStyle = {\n    minWidth: '650',\n    position: 'absolute',\n    top: '300px', \n    left: '7%',\n    right: '25%',\n    \n}\n\nconst tableFontStyle = {\n    fontFamily: 'Luckiest Guy',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '18px',\n    lineHeight: '24px',\n    color: '#000000',\n}\n\nconst btnStyle = {\n    position: 'absolute',\n    width: '118px',\n    height: '32px',\n    left: '35%',\n    right: '50%',\n    top: '430px',\n    background: '#BA0FF7',\n    borderRadius: '18px',\n    fontFamily: 'Luckiest Guy',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '24px',\n    lineHeight: '24px'\n}","import React, {useState, useEffect} from 'react';\nimport Header from '../components/Header';\nimport Logo from '../components/Logo';\nimport {Grid, Typography, Button } from '@material-ui/core';\nimport API from '../utils/API';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MovieCard from '../components/MovieCard';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n\nfunction ListItemLink(props) {\nreturn <ListItem button component=\"a\" {...props} />;\n}\n\nexport default function Movies() {\n    const [moviesSaved, setMoviesSaved,] = useState([])\n    const classes = useStyles ();\n    \n      //Load all the playlist and store them with setPlaylist\n      useEffect(() => {\n        loadMovies()\n    }, [])\n\n    //This will fetch the API for playlist saved in the database \n    function loadMovies() {\n        API.getMovies()\n        .then(res => \n            setMoviesSaved(res.data)\n        )\n        .catch(err => console.log(err));\n    };\n\n    return (\n\n        <Grid \n        container\n        style={container}\n        justify='center'\n        alignItems='center'\n        direction='column'\n        >\n        <Grid item>\n            <Logo></Logo>\n        </Grid>\n        <Grid item>\n            <Header></Header>\n        </Grid>\n        <Grid item>\n        <List component=\"nav\" aria-label=\"all-movies\">\n        {\n          moviesSaved.map((movies) => (\n            <Grid item xs={11} sm={4} key={movies._id}>\n              <MovieCard\n                id={movies._id}\n                title={movies.title}\n                director={movies.director}\n                genre={movies.genre}\n                released={movies.released}\n              />\n            </Grid>\n          ))\n        }\n        </List>\n        </Grid>\n        </Grid>\n    )\n}\n\nconst container = {\n    backgroundColor: '#FF5200',\n    width: '100vw',\n    height: '100vh',\n    flewgrow: '1',\n    // height: '100%',\n  };\n\n\nconst titleStyle = {\n    fontFamily: 'Luckiest Guy',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '24px',\n    lineHeight: '24px',\n    color: '#000000',\n    position: 'absolute',\n    width: '65.7%',\n    height: '4.7%',\n    top: '145px',\n    left: '7%',\n    right: '25%',\n}\n\nconst descStyle = {\n    fontFamily: 'Luckiest Guy',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '18px',\n    lineHeight: '24px',\n    color: '#000000',\n    position: 'absolute',\n    width: '248px',\n    height: '31px',\n    top: '200px',\n    left: '7%',\n    right: '25%',\n}\n\nconst tableStyle = {\n    minWidth: '650',\n    position: 'absolute',\n    top: '300px', \n    left: '7%',\n    right: '25%',\n    \n}\n\nconst tableFontStyle = {\n    fontFamily: 'Luckiest Guy',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '18px',\n    lineHeight: '24px',\n    color: '#000000',\n}\n\nconst btnStyle = {\n    position: 'absolute',\n    width: '118px',\n    height: '32px',\n    left: '35%',\n    right: '50%',\n    top: '430px',\n    background: '#BA0FF7',\n    borderRadius: '18px',\n    fontFamily: 'Luckiest Guy',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '24px',\n    lineHeight: '24px'\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport Landing from './pages/Landing';\nimport Create from './pages/Create';\nimport Search from './pages/Search';\nimport Playlist from './pages/Playlist';\nimport Movies from './pages/Movies';\n\n\n\nfunction App() {\n  return (\n      <Router>\n        <Route exact path='/' component={Landing} />\n        <Route exact path='/create' component={Create} />\n        <Route exact path='/search' component={Search} />\n        <Route exact path='/playlist' component={Playlist} />\n        <Route exact path='/movies' component={Movies} />\n        <NavBar/>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.1b672e7e.png\";"],"sourceRoot":""}